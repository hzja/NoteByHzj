.386
IO MACRO X,Y
   MOV AH,X
   LEA DX,Y
   INT 21H
   ENDM
DATAS SEGMENT USE16
   ARRAY DD 20001008H,-20001002H,90001001H,10001005H,-80001000H,0AFFF8000H,0FFF6200H,-0F700500H
   LEN = ($-ARRAY)/4
   COUNT DW LEN-1
   SIXTEEN DD 16
   RESULT DW ?
   BUF DB 20 DUP(0)
   PROMPT1 DB 'the source datas is: ',13,10,'$'
   PROMPT2 DB 'the sorted datas is: ',13,10,'$'
   CRLF DB 13,10,'$'
DATAS ENDS

STACKS SEGMENT USE16
   ;此处输入堆栈段代码
STACKS ENDS

CODES SEGMENT USE16
   ASSUME CS:CODES,DS:DATAS,SS:STACKS

START:
    MOV AX,DATAS
    MOV DS,AX
    IO 09H,PROMPT1
    MOV CL,LEN
    LEA BX,ARRAY
L1: MOV EAX,[BX]
    CALL DISPHEXSIGN
    MOV DL,','
    MOV AH,02H
    INT 21H
    ADD BX,4
    LOOP L1
    CALL DELETE
    IO 09H,CRLF
    IO 09H,CRLF

    CALL SORT

    IO 09H,PROMPT2
    MOV CL,LEN
    LEA BX,ARRAY
L2: MOV EAX,[BX]
    CALL DISPHEXSIGN
    MOV DL,','
    MOV AH,02H
    INT 21H
    ADD BX,4
    LOOP L2
    CALL DELETE
    IO 09H,CRLF
    MOV AH,4CH
    INT 21H

DISPHEXSIGN PROC NEAR
   PUSHAD
   MOV DI,0
   MOV CX,0
   OR EAX,EAX
   JNS L5
   MOV BUF[DI],'-'
   INC DI
   NEG EAX
L5:  XOR EDX,EDX
   DIV SIXTEEN
   PUSH DX
   INC CX
   CMP EAX,0
   JNZ L5
L6: POP AX
   CMP AL,9H
   JNA NEXT1
   ADD AL,7
NEXT1:   ADD AL,30H
   MOV BUF[DI],AL
   INC DI
   LOOP L6
   MOV BUF[DI],'H'
   MOV BUF[DI+1],'$'
   IO 09H,BUF
   POPAD
   RET
DISPHEXSIGN ENDP

SORT PROC NEAR
    PUSHAD
    LEA DI,ARRAY
    MOV BX,-1
LOOPOUT: CMP BX,-1
    JNE SORTEND
    XOR BX,BX
    MOV CX,COUNT
    MOV SI,DI
LOOPIN: MOV EAX,[SI]
    CMP EAX,[SI+4]
    JLE NOCHANGE
    XCHG [SI+4],EAX
    MOV [SI],EAX
    MOV BX,-1
NOCHANGE: ADD SI,4
    LOOP LOOPIN
    JMP LOOPOUT
SORTEND: POPAD
    RET
SORT ENDP

DELETE PROC NEAR
   PUSH DX
   MOV DL,8H;退格
   MOV AH,2H
   INT 21H
   MOV DL,' ';将逗号填充成空格
   MOV AH,2H
   INT 21H
   POP DX
   RET
DELETE ENDP

CODES ENDS
   END START
